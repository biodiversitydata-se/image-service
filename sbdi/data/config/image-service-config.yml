grails:
  serverURL: "http://localhost:8080"

server:
  #port: 8080
  contextPath:

security:
  core:
    authCookieName: ALA-Auth
    roleAttribute: role
    affiliation-survey:
      enabled: false
  cookie:
    enabled: false
    domain: '.biodiversitydata.se'
  cas:
    enabled: false
    appServerName: "http://localhost:8080"
    bypass: false
    disableCAS: false
    casServerName: https://auth.biodiversitydata.se
    casServerUrlPrefix: https://auth.biodiversitydata.se/cas
    casServerLoginUrl: https://auth.biodiversitydata.se/cas/login
    casServerLogoutUrl: https://auth.biodiversitydata.se/cas/logout
    loginUrl: https://auth.biodiversitydata.se/cas/login
    logoutUrl: https://auth.biodiversitydata.se/cas/logout
    authenticateOnlyIfLoggedInFilterPattern:
  oidc:
    enabled: true
    clientId: replace_with_real_value
    secret: replace_with_real_value
    discoveryUri: https://auth.biodiversitydata.se/cas/oidc/.well-known
    scope: openid profile email ala roles
    alaUseridClaim: userid
  jwt:
    enabled: false
    fallback-to-legacy-behaviour: true
    discoveryUri:
    #client-id:
    #secret:
    allowed-scopes: users/read
    role-claims: role
    roles-from-access-token: false
    user-id-claim: userid
  apikey:
    ip:
      whitelist:
    check:
      serviceUrl: https://auth.biodiversitydata.se/apikey/ws/check?apikey=
    enabled: true
    auth:
      serviceUrl: https://auth.biodiversitydata.se/apikey/
    userdetails:
      serviceUrl: https://auth.biodiversitydata.se/userdetails/

#websevice jwt
webservice:
  jwt: false
  jwt-scopes:
  client-id:
  client-secret:

userDetails:
  url: https://auth.biodiversitydata.se/userdetails/

info:
  app:
    name: 'image-service'
#    version: '{{ image_service_version }}'
#    grailsVersion: '4.1.1'

flyway:
  baselineOnMigrate: true

dataSource:
  url: "jdbc:postgresql://localhost/images?autoReconnect=true&connectTimeout=0&useUnicode=true&characterEncoding=UTF-8"
  driverClassName: org.postgresql.Driver
  username: images
  password: images
  dbCreate: validate

imageservice:
  imagestore:
    root: "/data/image-service/store"
    inbox: "/data/image-service/incoming"
    staging: "/data/image-service/store/staging"
  apache:
    root: "http://localhost:8080/store/"
    multiple_roots: "http://localhost:8080/store/"

    exportDir: "/data/image-service/exports"

# skin
skin:
  layout: _main
  fluidLayout: false
  favicon: "https://static.biodiversitydata.se/favicon.ico"
  orgNameLong: Swedish Biodiversity Data Infrastructure
  orgNameShort: SBDI
  homeUrl: "https://tools.biodiversitydata.se"

# external links
collectory:
  baseURL: "https://collections.biodiversitydata.se"
biocache:
  baseURL: "https://records.biodiversitydata.se"
  service:
    baseURL: "https://records.biodiversitydata.se/ws"
  
# header block
headerAndFooter:
  version: "2"
  baseURL: "https://static.biodiversitydata.se"
ala:
  baseURL: "https://biodiversitydata.se"
bie:
  baseURL: "https://species.biodiversitydata.se"
  searchPath: "/search"

# swagger configuration
swagger:
  info:
    description: "API Documentation for Image Services"
    version: "2.0"
    title:  "Image Service API"
    termsOfServices: "https://docs.biodiversitydata.se/sbdi-data/sbdi-atlas-terms-of-use/"
    contact:
      name:  "Support"
      url: "https://docs.biodiversitydata.se/support/"
      email: "gbif@nrm.se"
    license:
      name: "MPL 1.1"
      url: "https://www.mozilla.org/en-US/MPL/"
  schemes:
    - "HTTPS"
  consumes:
    - "application/json"
userdetails:
  url: https://auth.biodiversitydata.se/userdetails
userdetails.web.url: https://auth.biodiversitydata.se/userdetails/
userdetails.api.url: https://auth.biodiversitydata.se/userdetails/

#aws:
#  region:

elasticsearch:
  hosts:
    - host: "localhost"
      scheme: "http"
      port: 9200

openapi:
  terms: https://docs.biodiversitydata.se/sbdi-data/sbdi-atlas-terms-of-use/
  contact:
    name:
    email:
  components:
    security:
      oauth2:
        baseUrl: https://auth.biodiversitydata.se/cas/oidc
